opam-version: "2.0"
authors: [
  "Andres Erbsen <andreser@mit.edu>"
  "Google Inc."
  "Jade Philipoom <jadep@mit.edu> <jade.philipoom@gmail.com>"
  "Massachusetts Institute of Technology"
  "Zoe Paraskevopoulou <zoe.paraskevopoulou@gmail.com>"
]
maintainer: "Jason Gross <jgross@mit.edu>"
homepage: "https://github.com/mit-plv/fiat-crypto"
bug-reports: "https://github.com/mit-plv/fiat-crypto/issues"
license: "MIT OR Apache-2.0 OR BSD-1-Clause"
build: [
  [make "-j%{jobs}%" "EXTERNAL_DEPENDENCIES=1" "SKIP_COQSCRIPTS_INCLUDE=1" "coq" "standalone-ocaml"]
]
install: [
  [make "EXTERNAL_DEPENDENCIES=1" "SKIP_COQSCRIPTS_INCLUDE=1" "BINDIR=%{bin}%" "install" "install-standalone-ocaml"]
  ["etc/test-run-fiat-crypto-silent.sh" "%{bin}%/fiat_crypto"] {with-test}
  ["etc/test-run-fiat-crypto-silent.sh" "fiat_crypto"] {with-test}
]
depends: [
  "conf-findutils" {build}
  "ocaml" {build & >= "4.08~"}
  "ocamlfind" {build}
  "coq" {>= "8.18~"}
  "coq-coqprime" {>= "1.2.0"}
  "coq-rewriter" {>= "0.0.6"}
  "coq-rupicola" {= "0.0.9"}
  "coq-bedrock2-compiler" {= "0.0.7"}
]
conflict-class: [
  "coq-fiat-crypto"
]
dev-repo: "git+https://github.com/mit-plv/fiat-crypto.git"
synopsis: "Cryptographic Primitive Code Generation by Fiat"
description: """
Coq code and proofs for a command-line binary that can synthesize proven-correct
big-integer modular field arithmetic operations for cryptography.
Target languages include C, Rust, Zig, Go, and bedrock2.
"""
tags: ["logpath:Crypto"]
url {
  src: "https://github.com/mit-plv/fiat-crypto/archive/refs/tags/v0.1.2.tar.gz"
  checksum: "sha512=98d1d9124236f402a35bfc0d87bc2f9dd10d5a69778c14762d43f97f5a4ce24ecb6b9e4d7ca68133cac0d1577cd7629cbf9670d98c298ecc1190bbbdaa277d42"
}
