opam-version: "2.0"
synopsis: "Language model that predicts tactics for Tactician"
description:
  "Text2Tac is a language model for synthesizing tactics. It receives the
  current proof state as a human-readable prompt and “completes” this prompt
  by synthesizing a tactic."
maintainer: ["Jelle Piepenbrock"]
authors: ["Jelle Piepenbrock"]
license: "https://zenodo.org/records/10410474/files/LICENSE.md"
homepage: "https://coq-tactician.github.io/api/text2tac"
bug-reports:
    "https://github.com/JellePiepenbrock/text2tac/tree/text2tac/issues"
conflict-class: ["tactician-neural-model"]
build: [
  [ "tar" "-xzf" "model.tar.gz" "--one-top-level" "--strip-components" "1" ]
]
install: [
  [ "mkdir" "--parents" "%{share}%/%{name}%/" ]
  [ "cp" "-r" "model/" "%{share}%/%{name}%/" ]

  [ "cp" "Text2TacConfig.v" "%{lib}%/coq/user-contrib/Tactician/Text2TacConfig.v" ]

  # We have to make sure that our injection flags get loaded after the injection flags of coq-tactician-api.
  # We do this by using a name that is guaranteed to sort after coq-tactician-api.
  [ "mkdir" "-p" "%{share}%/coq-tactician/plugins/coq-tactician-api-%{name}%/" ]
  [ "cp" "injection-flags" "%{share}%/coq-tactician/plugins/coq-tactician-api-%{name}%/" ]
]
dev-repo: "git+https://github.com/JellePiepenbrock/text2tac.git"
depends: [
  "coq-tactician-api" {= "15.0+8.11"}
]
extra-source "model.tar.gz" {
  src: "https://zenodo.org/records/10410474/files/text2tac.tar.gz"
  checksum: "md5=50d688940a24796867fbfc48f085bc4f"
}
substs: [
  "Text2TacConfig.v"
]
extra-files: [
  [
    "Text2TacConfig.v.in"
    "sha512=d74ad78335f373873f7ef0e6b43d426f412ff760aa933f21f4c0eef1b2dfb50fefe939a455130c0bbf15c7eeeaf834bc926645639fc48a4b46591e8d6fbef76d"
  ]
  [
    "injection-flags"
    "sha512=08326251b37f00c79f8b74a294b9b20ee6756aaf6110bc760002b10c864fa078838406947425df66c0741e0436dcd4d4330c7958d2d04dd3831396d49e4dbb5c"
  ]
]
