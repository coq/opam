opam-version: "2.0"
maintainer: "Ralf Jung <jung@mpi-sws.org>"
authors: "The std++ team"
license: "BSD-3-Clause"
homepage: "https://gitlab.mpi-sws.org/iris/stdpp"
bug-reports: "https://gitlab.mpi-sws.org/iris/stdpp/issues"
dev-repo: "git+https://gitlab.mpi-sws.org/iris/stdpp.git"

synopsis: "An extended \"Standard Library\" for Coq"
description: """
The key features of this library are as follows:

- It provides a great number of definitions and lemmas for common data
  structures such as lists, finite maps, finite sets, and finite multisets.
- It uses type classes for common notations (like `∅`, `∪`, and Haskell-style
  monad notations) so that these can be overloaded for different data structures.
- It uses type classes to keep track of common properties of types, like it
  having decidable equality or being countable or finite.
- Most data structures are represented in canonical ways so that Leibniz
  equality can be used as much as possible (for example, for maps we have
  `m1 = m2` iff `∀ i, m1 !! i = m2 !! i`). On top of that, the library provides
  setoid instances for most types and operations.
- It provides various tactics for common tasks, like an ssreflect inspired
  `done` tactic for finishing trivial goals, a simple breadth-first solver
  `naive_solver`, an equality simplifier `simplify_eq`, a solver `solve_proper`
  for proving compatibility of functions with respect to relations, and a solver
  `set_solver` for goals involving set operations.
- It is entirely dependency- and axiom-free.
"""
tags: [
  "date:2022-08-17"
  "logpath:stdpp"
]

depends: [
  "coq" { (>= "8.13" & < "8.19~") | (= "dev") }
]

patches: ["curry.patch"]
build: ["./make-package" "stdpp" "-j%{jobs}%"]
install: ["./make-package" "stdpp" "install"]

url {
  src:
    "https://gitlab.mpi-sws.org/iris/stdpp/-/archive/coq-stdpp-1.8.0.tar.gz"
  checksum:
    "sha512=c894cc0574ab00efa41c807628f97abdeff917bee71b40e2f98251bcdc91ebfb7a2964683e61e7cefbe6e578b2e123098ddd7694252406f8c4835176c1d0df37"
}
extra-files: [
  "curry.patch"
  "sha512=504d6df94ed44ce66162d0ef5a4460dc630910e1a3228655c641d34604ec7bced723b8c6cd541fca1e16d024bae12087435656d193c0a6f7752b4c44d0270623"
]
